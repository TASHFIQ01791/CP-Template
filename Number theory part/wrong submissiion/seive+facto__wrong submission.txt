#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define PB push_back
#define yes cout<<"Yes"<<endl;
#define no cout<<"No"<<endl;
#define all(X) (X).begin(),(X).end()
#define Reverse(X) reverse(all(X))


#define maxe(A,n)      *max_element(A,A+n)
#define mine(A,n)      *min_element(A,A+n)
#define gcd(a,b)       __gcd(a,b)
#define lcm(a,b)       (a*(b/gcd(a,b)))
#define Unique(X) (X).erase(unique((X).begin(),(X).end()),(X).end())

const ll mx=1e6+123;
bool is_prime[mx];
vector<ll>prime;

void seive(ll n) // seive of Eratosthenis
{
    for(ll i=3;i<=n;i+=2)
    {
        is_prime[i]=1;
    }
    ll sq=sqrt(n);

    for(ll i=3;i<=sq;i+=2)
    {
        if(is_prime[i]==1)
        {
            for(ll j=i*i;j<=n;j+=(i+i))
            {
                is_prime[j]=0;
            }
        }
    }

    is_prime[2]=1;
    prime.push_back(2);
    for(ll i=3;i<=n;i+=2) 
    {
        if(is_prime[i]==1) 
        {
            prime.push_back(i);
        }
        
    }

    for(ll i=0;i<prime.size();i++)
    {
        cout<<prime[i]<<" ";
    }cout<<endl;
    prime.clear();
}

void prime_factor(ll n) // prime Factorization
{
    for(ll i=2;i<n/i;i++)
    {
        if(n%i==0)
        {
            ll cnt=0;
            while(n%i==0)
            {
                cnt++;
                n/=i;
            }
            cout<<i<<"^"<<cnt<<" ";
        }
    }
    if(n>1) cout<<n<<"^"<<1;
    cout<<endl;
}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    ll test; cin>>test;
    while(test--)
    {
        ll n; cin>>n;
        //seive(n);
        prime_factor(n);
    }
}